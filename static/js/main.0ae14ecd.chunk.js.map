{"version":3,"sources":["Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["Dashboard","useState","hours","setHours","minutes","setMinutes","timeOfDay","setTimeOfDay","ampm","setAmPm","dayName","setDayName","day","setDay","month","setMonth","task","setTask","tasks","setTasks","myTasks","localStorage","getItem","JSON","parse","setItem","stringify","isOpen","setIsOpen","useEffect","interval","setInterval","date","Date","nextHours","getHours","nextMin","getMinutes","nextDay","getDay","nextDate","getDate","nextMonth","getMonth","toString","padStart","clearInterval","style1","color","textDecoration","fontStyle","style2","updateLocalStorage","updatedTodos","className","style","backgroundImage","title","onClick","icon","appear","show","as","Fragment","onClose","Child","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Overlay","Title","type","placeholder","value","onChange","e","target","onKeyDown","key","updatedTask","i","length","push","console","log","addTask","id","Math","random","substr","taskItem","completed","map","item","checked","itemKey","prevTasks","handleChange","event","preventDefault","tempArray","indexToRemove","indexOf","splice","handleDelete","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0ae14ecd.chunk.js","sourcesContent":["import './css/Dashboard.css';\r\nimport React, { useState, useEffect, Fragment } from 'react';\r\nimport { Icon } from '@iconify/react';\r\nimport { Dialog, Transition } from '@headlessui/react'\r\n\r\nfunction Dashboard() {\r\n    const imgSrc = \"https://source.unsplash.com/1920x1080/daily?\";\r\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n    const [hours, setHours] = useState(null);\r\n    const [minutes, setMinutes] = useState(null);\r\n    const [timeOfDay, setTimeOfDay] = useState(\"\");\r\n    const [ampm, setAmPm] = useState(\"\");\r\n    const [dayName, setDayName] = useState(\"\");\r\n    const [day, setDay] = useState(\"\");\r\n    const [month, setMonth] = useState(\"\");\r\n    const [task, setTask] = useState(\"\");\r\n    const [tasks, setTasks] = useState([]);\r\n\r\n    let myTasks = []\r\n    if (!localStorage.getItem(\"myTasks\")) {\r\n        localStorage.setItem(\"myTasks\", JSON.stringify(tasks))\r\n    } else {\r\n        myTasks = JSON.parse(localStorage.getItem('myTasks'));\r\n    }\r\n    let [isOpen, setIsOpen] = useState(false)\r\n\r\n    const closeModal = () => setIsOpen(false);\r\n    const openModal = () => setIsOpen(true);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const date = new Date();\r\n            const nextHours = date.getHours();\r\n            setHours(nextHours);\r\n            const nextMin = date.getMinutes();\r\n            setMinutes(nextMin);\r\n            const nextDay = date.getDay();\r\n            setDayName(nextDay);\r\n            const nextDate = date.getDate();\r\n            setDay(nextDate);\r\n            const nextMonth = date.getMonth();\r\n            setMonth(nextMonth);\r\n\r\n            if (nextHours < 12) {\r\n                if (nextHours === 0) {\r\n                    setHours(nextHours + 12);\r\n                }\r\n                setTimeOfDay(\"Morning\");\r\n                setAmPm(\"AM\");\r\n            } else if (nextHours >= 12 && nextHours < 18) {\r\n                if (nextHours !== 12) {\r\n                    setHours(nextHours - 12);\r\n                }\r\n                setTimeOfDay(\"Afternoon\");\r\n                setAmPm(\"PM\");\r\n            } else {\r\n                setHours(nextHours - 12);\r\n                setTimeOfDay(\"Evening\");\r\n                setAmPm(\"PM\");\r\n            }\r\n\r\n            if (nextMin < 10) {\r\n                setMinutes(nextMin.toString().padStart(2, '0'))\r\n            }\r\n\r\n        }, 500);\r\n        return () => {\r\n            clearInterval(interval);\r\n        };\r\n    }, [hours]);\r\n\r\n    const style1 = {\r\n        color: \"gray\",\r\n        textDecoration: \"line-through\",\r\n        fontStyle: \"italic\"\r\n    } \r\n    const style2 = {\r\n        color: \"black\"\r\n    }\r\n\r\n    const updateLocalStorage = (updatedTodos) => {\r\n        localStorage.setItem(\"myTasks\", JSON.stringify(updatedTodos));\r\n    }\r\n\r\n    const addTask = (task) => {\r\n        setTasks([...tasks, task])\r\n        setTask(\"\");\r\n        let updatedTask = [];\r\n        for (let i = 0; i < myTasks.length; i++) {\r\n            updatedTask.push(myTasks[i]);\r\n        }\r\n        console.log(updatedTask)\r\n        updatedTask.push(task);\r\n        updateLocalStorage(updatedTask)\r\n    };\r\n\r\n    const generateID = () => {\r\n        return '_' + Math.random().toString(36).substr(2, 9);\r\n    };\r\n\r\n    const handleChange = (itemKey) => {\r\n        const prevTasks = [...myTasks]\r\n        console.log(prevTasks)\r\n        let updatedTask = [];\r\n        for (let i = 0; i < prevTasks.length; i++) {\r\n            if (itemKey === prevTasks[i].id) {\r\n                prevTasks[i].completed = !prevTasks[i].completed;\r\n                updatedTask.push(prevTasks[i])\r\n            } else {\r\n                updatedTask.push(prevTasks[i])\r\n            }\r\n        }\r\n        setTasks(updatedTask)\r\n        updateLocalStorage(updatedTask)\r\n    }\r\n\r\n    const handleDelete = (event, itemKey) => {\r\n        event.preventDefault();\r\n        let tempArray = [...myTasks];\r\n        const ids = myTasks.map(item => item.id)\r\n        const indexToRemove = ids.indexOf(itemKey)\r\n        tempArray.splice(indexToRemove, 1);\r\n        setTasks(tempArray);\r\n        updateLocalStorage(tempArray);\r\n        console.log(tempArray)\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"bg background-tint\" style={{ backgroundImage: `url(${imgSrc}${timeOfDay},mountain)` }}>\r\n            <div className=\"h-full flex flex-col items-center justify-center\">\r\n                <h1 className=\"text-3xl text-white 2xl:text-8xl lg:text-7xl md:text-5xl\">Good {timeOfDay}, Blessly!</h1>\r\n            </div>\r\n            <div className=\"flex flex-col float-left justify-center left-0 bottom-0 fixed\">\r\n                <h1 className=\"text-3xl 2xl:text-6xl lg:text-5xl md:text-5xl text-white px-4\">{hours}:{minutes} {ampm}</h1>\r\n                <h1 className=\"text-2xl 2xl:text-4xl text-white px-4 py-4\">{days[dayName]}, {months[month]} {day}</h1>\r\n            </div>\r\n            <div className=\"flex flex-row float-right justify-center items-center right-0 bottom-0 fixed py-2\">\r\n                <button className=\"border-0 rounded-xl p-2\" title=\"To-do List\" onClick={openModal}>\r\n                    <span>\r\n                        <Icon className=\"text-white opacity-70 hover:drop-shadow-sm text-5xl\" icon=\"fluent:clipboard-task-add-24-filled\" />\r\n                    </span>\r\n                </button>\r\n            </div>\r\n            <Transition appear show={isOpen} as={Fragment}>\r\n                <Dialog\r\n                    as=\"div\"\r\n                    className=\"fixed inset-0 z-10 overflow-y-auto\"\r\n                    onClose={closeModal}\r\n                >\r\n                    <div className=\"min-h-screen px-4 text-center\">\r\n                        <Transition.Child\r\n                            as={Fragment}\r\n                            enter=\"ease-out duration-300\"\r\n                            enterFrom=\"opacity-0\"\r\n                            enterTo=\"opacity-100\"\r\n                            leave=\"ease-in duration-200\"\r\n                            leaveFrom=\"opacity-100\"\r\n                            leaveTo=\"opacity-0\"\r\n                        >\r\n                            <Dialog.Overlay className=\"fixed inset-0\" />\r\n                        </Transition.Child>\r\n\r\n                        <span\r\n                            className=\"inline-block h-screen align-middle\"\r\n                            aria-hidden=\"true\"\r\n                        >\r\n                            &#8203;\r\n                        </span>\r\n                        <Transition.Child\r\n                            as={Fragment}\r\n                            enter=\"ease-out duration-300\"\r\n                            enterFrom=\"opacity-0 scale-95\"\r\n                            enterTo=\"opacity-100 scale-100\"\r\n                            leave=\"ease-in duration-200\"\r\n                            leaveFrom=\"opacity-100 scale-100\"\r\n                            leaveTo=\"opacity-0 scale-95\"\r\n                        >\r\n                            <div className=\"inline-block w-full max-w-md p-6 my-8 overflow-hidden text-left align-middle transition-all transform bg-white shadow-xl rounded-md\">\r\n                                <Dialog.Title\r\n                                    as=\"h3\"\r\n                                    className=\"text-lg font-medium leading-6 text-gray-900\"\r\n                                >\r\n                                    To-do List\r\n                                </Dialog.Title>\r\n                                <div className=\"mt-2\">\r\n                                    <input\r\n                                        className=\"w-full h-10 pl-3 pr-8 text-base text-gray-700 placeholder-gray-600 border rounded-md focus:outline-none\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"Enter tasks here\"\r\n                                        value={task}\r\n                                        onChange={(e) => setTask(e.target.value)}\r\n                                        onKeyDown={(e) => e.key === 'Enter' ? addTask({ id: generateID(), taskItem: task, completed: false }) : ''}\r\n                                        id=\"task\" />\r\n                                </div>\r\n                                <div className=\"mt-4 text-sm text-gray-500 divide-y-2 divide-gray-100\">\r\n                                    {myTasks.map((item) => (\r\n                                        <div key={item.id} className=\"flex-row content-center items-center py-1\">\r\n                                            \r\n                                                <input\r\n                                                    type=\"checkbox\"\r\n                                                    checked={item.completed}\r\n                                                    onChange={() => handleChange(item.id)}\r\n                                                />\r\n                                                <span className=\"ml-1 text-sm\" style={item.completed ? style1 : style2} >{item.taskItem}</span>\r\n                                                <button className=\"float-right\" onClick={(e) => handleDelete(e, item.id)}>\r\n                                                    <span>\r\n                                                        <Icon className=\"text-black opacity-5 hover:opacity-50 text-lg m-0\" icon=\"bi:x\" />\r\n                                                    </span>\r\n                                                </button>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n\r\n                            </div>\r\n                        </Transition.Child>\r\n                    </div>\r\n                </Dialog>\r\n            </Transition>\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Dashboard","import './css/App.css';\nimport Dashboard from './Dashboard.js'\n\n\n\nfunction App() {\n  return (\n    <div>\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}