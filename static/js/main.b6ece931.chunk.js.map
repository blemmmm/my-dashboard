{"version":3,"sources":["ViewItems.js","Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["ViewItems","props","style","items","completed","color","textDecoration","fontStyle","handleChange","itemKey","updatedTodos","updatedTask","myTasks","JSON","parse","localStorage","getItem","i","length","id","push","setItem","stringify","className","type","checked","onChange","taskItem","Dashboard","useState","hours","setHours","minutes","setMinutes","timeOfDay","setTimeOfDay","ampm","setAmPm","dayName","setDayName","day","setDay","month","setMonth","task","setTask","tasks","setTasks","isOpen","setIsOpen","useEffect","interval","setInterval","date","Date","nextHours","getHours","nextMin","getMinutes","nextDay","getDay","nextDate","getDate","nextMonth","getMonth","toString","padStart","clearInterval","taskItems","map","item","taskId","backgroundImage","title","onClick","icon","appear","show","as","Fragment","onClose","Child","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Overlay","Title","placeholder","value","e","target","onKeyDown","key","addTask","Math","random","substr","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b6ece931.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction ViewItems(props) {\r\n    let style = props.items.completed ? {\r\n        color: \"gray\",\r\n        textDecoration: \"line-through\",\r\n        fontStyle: \"italic\"\r\n    } : {\r\n        color: \"black\"\r\n    }\r\n\r\n    const updateLocalStorage = (updatedTodos) => {\r\n        localStorage.setItem(\"myTasks\", JSON.stringify(updatedTodos));\r\n    }\r\n    const handleChange = (itemKey) => {\r\n        let updatedTask = [];\r\n        const myTasks = JSON.parse(localStorage.getItem('myTasks'));\r\n        for (let i=0; i<myTasks.length; i++) {\r\n            if (itemKey === myTasks[i].id) {\r\n                myTasks[i].completed = !myTasks[i].completed;\r\n                updatedTask.push(myTasks[i])\r\n            } else {\r\n                updatedTask.push(myTasks[i])\r\n            }\r\n        }\r\n        updateLocalStorage(updatedTask)\r\n    }\r\n\r\n    return(\r\n        <div className=\"flex-row content-center\titems-center\">\r\n            <input \r\n                type=\"checkbox\" \r\n                checked={props.items.completed} \r\n                onChange={() => handleChange(props.items.id)}\r\n            />\r\n            <span className=\"ml-1\" style={style}>{props.items.taskItem}</span>\r\n        </div>\r\n    )\r\n}\r\nexport default ViewItems","import './css/Dashboard.css';\r\nimport React, {useState, useEffect, Fragment} from 'react';\r\nimport { Icon } from '@iconify/react';\r\nimport { Dialog, Transition } from '@headlessui/react'\r\nimport ViewItems from './ViewItems';\r\n\r\nfunction Dashboard() {\r\n    const imgSrc = \"https://source.unsplash.com/1920x1080/daily?\";\r\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]; \r\n    const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n    const [hours, setHours] = useState(null);\r\n    const [minutes, setMinutes] = useState(null);\r\n    const [timeOfDay, setTimeOfDay] = useState(\"\");\r\n    const [ampm, setAmPm] = useState(\"\");\r\n    const [dayName, setDayName] = useState(\"\");\r\n    const [day, setDay] = useState(\"\");\r\n    const [month, setMonth] = useState(\"\");\r\n    const [task, setTask] = useState(\"\");\r\n    const [tasks, setTasks] = useState([]);\r\n    let myTasks = []\r\n    if (!localStorage.getItem(\"myTasks\")) {\r\n        localStorage.setItem(\"myTasks\", JSON.stringify(tasks))\r\n    } else {\r\n        myTasks = JSON.parse(localStorage.getItem('myTasks'));\r\n    }\r\n    let [isOpen, setIsOpen] = useState(false)\r\n\r\n    const closeModal = () => setIsOpen(false);\r\n    const openModal = () => setIsOpen(true);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const date = new Date();\r\n            const nextHours = date.getHours();\r\n            setHours(nextHours);\r\n            const nextMin = date.getMinutes();\r\n            setMinutes(nextMin);\r\n            const nextDay = date.getDay();\r\n            setDayName(nextDay);\r\n            const nextDate = date.getDate();\r\n            setDay(nextDate);\r\n            const nextMonth = date.getMonth();\r\n            setMonth(nextMonth);\r\n\r\n            if (nextHours < 12) {\r\n                if (nextHours === 0) {\r\n                    setHours(nextHours+12);\r\n                }\r\n                setTimeOfDay(\"Morning\");\r\n                setAmPm(\"AM\");\r\n            } else if (nextHours >= 12 && nextHours < 17) {\r\n                if (nextHours !== 12) {\r\n                    setHours(nextHours-12);\r\n                }\r\n                setTimeOfDay(\"Afternoon\");\r\n                setAmPm(\"PM\");\r\n            } else {\r\n                setHours(nextHours-12);\r\n                setTimeOfDay(\"Evening\");\r\n                setAmPm(\"PM\");\r\n            }\r\n\r\n            if (nextMin < 10) {\r\n                setMinutes(nextMin.toString().padStart(2, '0'))\r\n            }     \r\n\r\n        }, 500);\r\n        return () => {\r\n          clearInterval(interval);\r\n        };\r\n      }, [hours]);\r\n\r\n    const addTask = (task) => {\r\n        setTasks([...tasks, task])\r\n        setTask(\"\");\r\n        let updatedTask = [];\r\n        for (let i=0; i<myTasks.length; i++) {\r\n            updatedTask.push(myTasks[i]);\r\n        }\r\n        updatedTask.push(task);\r\n        localStorage.setItem(\"myTasks\", JSON.stringify(updatedTask))\r\n    };\r\n\r\n    const generateID = () => {\r\n        return '_' + Math.random().toString(36).substr(2, 9);\r\n    };\r\n\r\n      \r\n    const taskItems = myTasks.map(item => {\r\n        const taskId = item.id;\r\n        return <ViewItems key={taskId} items={item} />\r\n    });\r\n\r\n    return(\r\n        \r\n        <div className=\"bg background-tint\" style={{backgroundImage: `url(${imgSrc}${timeOfDay},mountain)`}}>\r\n            <div className=\"h-full flex flex-col items-center justify-center\">\r\n                <h1 className=\"text-3xl text-white 2xl:text-8xl lg:text-7xl md:text-5xl\">Good {timeOfDay}, Blessly!</h1>\r\n            </div>\r\n            <div className=\"flex flex-col float-left justify-center left-0 bottom-0 fixed\">\r\n                <h1 className=\"text-3xl 2xl:text-6xl lg:text-5xl md:text-5xl text-white px-4\">{hours}:{minutes} {ampm}</h1>\r\n                <h1 className=\"text-2xl 2xl:text-4xl text-white px-4 py-4\">{days[dayName]}, {months[month]} {day}</h1>\r\n            </div>\r\n            <div className=\"flex flex-row float-right justify-center items-center right-0 bottom-0 fixed px-4 py-4\">\r\n                <button className=\"border-0 rounded-xl p-2\" title=\"To-do List\" onClick={openModal}>\r\n                    <span>\r\n                        <Icon className=\"text-white opacity-50 hover:drop-shadow-sm text-4xl\" icon=\"fa-solid:clipboard-list\" />\r\n                    </span>\r\n                </button>\r\n            </div>\r\n            <Transition appear show={isOpen} as={Fragment}>\r\n                <Dialog\r\n                as=\"div\"\r\n                className=\"fixed inset-0 z-10 overflow-y-auto\"\r\n                onClose={closeModal}\r\n                >\r\n                <div className=\"min-h-screen px-4 text-center\">\r\n                    <Transition.Child\r\n                    as={Fragment}\r\n                    enter=\"ease-out duration-300\"\r\n                    enterFrom=\"opacity-0\"\r\n                    enterTo=\"opacity-100\"\r\n                    leave=\"ease-in duration-200\"\r\n                    leaveFrom=\"opacity-100\"\r\n                    leaveTo=\"opacity-0\"\r\n                    >\r\n                    <Dialog.Overlay className=\"fixed inset-0\" />\r\n                    </Transition.Child>\r\n\r\n                    <span\r\n                    className=\"inline-block h-screen align-middle\"\r\n                    aria-hidden=\"true\"\r\n                    >\r\n                    &#8203;\r\n                    </span>\r\n                    <Transition.Child\r\n                    as={Fragment}\r\n                    enter=\"ease-out duration-300\"\r\n                    enterFrom=\"opacity-0 scale-95\"\r\n                    enterTo=\"opacity-100 scale-100\"\r\n                    leave=\"ease-in duration-200\"\r\n                    leaveFrom=\"opacity-100 scale-100\"\r\n                    leaveTo=\"opacity-0 scale-95\"\r\n                    >\r\n                    <div className=\"inline-block w-full max-w-md p-6 my-8 overflow-hidden text-left align-middle transition-all transform bg-white shadow-xl rounded-md\">\r\n                        <Dialog.Title\r\n                        as=\"h3\"\r\n                        className=\"text-lg font-medium leading-6 text-gray-900\"\r\n                        >\r\n                        To-do List\r\n                        </Dialog.Title>\r\n                        <div className=\"mt-2\">\r\n                        <input \r\n                        className=\"w-full h-10 pl-3 pr-8 text-base text-gray-700 placeholder-gray-600 border rounded-md focus:outline-none\" \r\n                        type=\"text\" \r\n                        placeholder=\"Enter tasks here\" \r\n                        value={task} \r\n                        onChange={(e) => setTask(e.target.value)} \r\n                        onKeyDown={(e) => e.key === 'Enter' ? addTask({id: generateID(), taskItem: task, completed: false}) : ''}\r\n                        id=\"task\"/>\r\n                        </div>\r\n                        <div className=\"mt-4 text-sm text-gray-500\">\r\n                            {taskItems}\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    </Transition.Child>\r\n                </div>\r\n                </Dialog>\r\n            </Transition>\r\n        </div>\r\n\r\n        \r\n    );\r\n}\r\n\r\nexport default Dashboard","import './css/App.css';\nimport Dashboard from './Dashboard.js'\n\n\n\nfunction App() {\n  return (\n    <div>\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}